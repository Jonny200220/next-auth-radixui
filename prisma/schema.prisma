// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  PENDING       // Pendiente
  IN_PROGRESS   // En proceso
  COMPLETED     // Completada
  CANCELLED     // Cancelada
}

enum Role {
  ADMIN       // Administrador del sistema
  DESIGN      // Equipo de diseño
  BRANDING    // Equipo de branding
  MARKETING   // Equipo de marketing
  SISTEMAS   // Desarrollador
  CLIENT      // Cliente externo
}

model User {
  id               Int       @id @default(autoincrement())
  name             String?
  email            String    @unique
  password         String
  role             Role      @default(CLIENT)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  // Tareas creadas por el usuario
  tasksCreated     Task[]    @relation("TaskCreator")
  
  // Tareas asignadas al usuario
  tasksAssigned    Task[]    @relation("TaskAssignee")
  
  // Comentarios del usuario
  comments         Comment[]
  
  @@index([email])
  @@index([role])
}

model Task {
  id               Int          @id @default(autoincrement())
  title            String       // Título de la tarea
  content          String?      // Descripción detallada
  status           TaskStatus   @default(PENDING)
  priority         Int          @default(0) // 0=baja, 1=media, 2=alta
  dueDate          DateTime?    // Fecha límite opcional
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  
  // Usuario que creó/envió la tarea
  creatorId        Int
  creator          User         @relation("TaskCreator", fields: [creatorId], references: [id], onDelete: Cascade)
  
  // Usuario al que se le asignó la tarea
  assigneeId       Int
  assignee         User         @relation("TaskAssignee", fields: [assigneeId], references: [id], onDelete: Cascade)
  
  // Comentarios de la tarea
  comments         Comment[]
  
  // Índices para mejorar el rendimiento
  @@index([creatorId])
  @@index([assigneeId])
  @@index([status])
  @@index([createdAt])
  @@index([dueDate])
}

model Comment {
  id               Int       @id @default(autoincrement())
  content          String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  // Tarea a la que pertenece el comentario
  taskId           Int
  task             Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)
  
  // Usuario que hizo el comentario
  authorId         Int
  author           User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  
  @@index([taskId])
  @@index([authorId])
  @@index([createdAt])
}